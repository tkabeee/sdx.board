<?php

require_once 'Bd/Db/Record.php';
require_once 'Bd/Orm/Main/Table/ThreadTag.php';
require_once 'Bd/Orm/Main/Const/ThreadTag.php';

abstract class Bd_Orm_Main_Base_ThreadTag extends Bd_Db_Record
{

    private static $_table_class = null;

    /**
     * @return Bd_Orm_Main_Table_ThreadTag
     */
    public static function getTable()
    {
        if(!self::$_table_class)
        {
            self::$_table_class = new Bd_Orm_Main_Table_ThreadTag();
            self::$_table_class->lock();
        }
        
        
        return self::$_table_class;
    }

    /**
     * @return Bd_Orm_Main_Table_ThreadTag
     */
    protected function _getTable()
    {
        return self::getTable();
    }

    /**
     * @return Bd_Orm_Main_Table_ThreadTag
     */
    public static function createTable()
    {
        return new Bd_Orm_Main_Table_ThreadTag();
    }

    /**
     * @return Bd_Orm_Main_Form_ThreadTag
     */
    public static function createForm(array $except = array())
    {
        return new Bd_Orm_Main_Form_ThreadTag('', array(), $except);
    }

    public function getThreadId()
    {
        return $this->_get('thread_id');
    }

    /**
     * @return Bd_Orm_Main_ThreadTag
     */
    public function setThreadId($value)
    {
        if(isset($this->_relations['Thread']) && $value != $this->getThreadId())
        {
            unset($this->_relations['Thread']);
        }
        
        return $this->_set('thread_id', $value);
    }

    public function getTagId()
    {
        return $this->_get('tag_id');
    }

    /**
     * @return Bd_Orm_Main_ThreadTag
     */
    public function setTagId($value)
    {
        if(isset($this->_relations['Tag']) && $value != $this->getTagId())
        {
            unset($this->_relations['Tag']);
        }
        
        return $this->_set('tag_id', $value);
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Bd_Orm_Main_Tag
     */
    public function getTag($arg = null)
    {
        $this->_relation_save = true;
        
        if($arg || !array_key_exists('Tag', $this->_relations))
        {
        	$tag_id = $this->getTagId();
        	
        	if($tag_id)
        	{
        	   list($select, $db) = $this->_detectGetterArg($arg, 'getTagSelect');
        		
        	    $table = Bd_Orm_Main_Tag::getTable();
        		$select->add('id', $tag_id);
        		$record = $table->fetchRow($select);
        	}
        	else
        	{
        		$record = null;
        	}
        	
        	$this->_relations['Tag'] = $record;
        }
        
        return $this->_relations['Tag'] === null ? Sdx_Null::getInstance() : $this->_relations['Tag'];
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Bd_Orm_Main_ThreadTag
     */
    public function setTag(Bd_Orm_Main_Tag $record)
    {
        $this->_relation_save = true;
        $record->poolThreadTag($this);
        
        $this->setTagId($record->getId());
        
        $this->_relations['Tag'] = $record;
        return $this;
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Bd_Orm_Main_ThreadTag
     */
    public function bindTag(Bd_Orm_Main_Tag $record = null, $oposite = false)
    {
        $this->_relation_save = true;
        $this->_relations['Tag'] = $record;
        
        if($record && $oposite)
        {
        	$record->bindThreadTag($this);
        }
        
        
        return $this;
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Sdx_Db_Select
     */
    public function getTagSelect(Sdx_Db_Adapter $db = null)
    {
        return Bd_Orm_Main_Tag::getTable()->getSelect($db);
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Bd_Orm_Main_Thread
     */
    public function getThread($arg = null)
    {
        $this->_relation_save = true;
        
        if($arg || !array_key_exists('Thread', $this->_relations))
        {
        	$thread_id = $this->getThreadId();
        	
        	if($thread_id)
        	{
        	   list($select, $db) = $this->_detectGetterArg($arg, 'getThreadSelect');
        		
        	    $table = Bd_Orm_Main_Thread::getTable();
        		$select->add('id', $thread_id);
        		$record = $table->fetchRow($select);
        	}
        	else
        	{
        		$record = null;
        	}
        	
        	$this->_relations['Thread'] = $record;
        }
        
        return $this->_relations['Thread'] === null ? Sdx_Null::getInstance() : $this->_relations['Thread'];
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Bd_Orm_Main_ThreadTag
     */
    public function setThread(Bd_Orm_Main_Thread $record)
    {
        $this->_relation_save = true;
        $record->poolThreadTag($this);
        
        $this->setThreadId($record->getId());
        
        $this->_relations['Thread'] = $record;
        return $this;
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Bd_Orm_Main_ThreadTag
     */
    public function bindThread(Bd_Orm_Main_Thread $record = null, $oposite = false)
    {
        $this->_relation_save = true;
        $this->_relations['Thread'] = $record;
        
        if($record && $oposite)
        {
        	$record->bindThreadTag($this);
        }
        
        
        return $this;
    }

    /**
     * Generated by Sdx_Generator_Model_Relation_ManyOne
     *
     * @return Sdx_Db_Select
     */
    public function getThreadSelect(Sdx_Db_Adapter $db = null)
    {
        return Bd_Orm_Main_Thread::getTable()->getSelect($db);
    }


}

